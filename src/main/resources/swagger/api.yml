openapi: "3.0.0"
info:
  title: "Project Management API"
  version: "1.0.0"
  description: "API for managing project roles, grants, and permissions."

servers:
  - url: "http://localhost:8081/api/"

paths:
  /roles:
    get:
      summary: "Get all roles"
      tags:
        - "Roles"
      responses:
        '200':
          description: "A list of roles"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: "Create a role"
      tags:
        - "Roles"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDTO'
      responses:
        '201':
          description: "Role created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /roles/{roleId}:
    get:
      summary: "Get a role by ID"
      tags:
        - "Roles"
      parameters:
        - name: "roleId"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        '200':
          description: "A role object"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '404':
          description: "Role not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: "Update a role"
      tags:
        - "Roles"
      parameters:
        - name: "roleId"
          in: "path"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDTO'
      responses:
        '200':
          description: "Role updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: "Role not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: "Delete a role"
      tags:
        - "Roles"
      parameters:
        - name: "roleId"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        '204':
          description: "Role deleted"
        '404':
          description: "Role not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /grants:
    get:
      summary: "Get all grants"
      tags:
        - "Grants"
      responses:
        '200':
          description: "A list of grants."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grant'
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: "Create a grant"
      tags:
        - "Grants"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantDTO'
      responses:
        '201':
          description: "Grant created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grant'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /grants/{grantId}:
    get:
      summary: "Get a grant by ID"
      tags:
        - "Grants"
      parameters:
        - name: "grantId"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        '200':
          description: "A grant object"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grant'
        '404':
          description: "Grant not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: "Update a grant"
      tags:
        - "Grants"
      parameters:
        - name: "grantId"
          in: "path"
          required: true
          schema:
            type: "integer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantDTO'
      responses:
        '200':
          description: "Grant updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grant'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: "Grant not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: "Delete a grant"
      tags:
        - "Grants"
      parameters:
        - name: "grantId"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        '204':
          description: "Grant deleted"
        '404':
          description: "Grant not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /grants/by-role/{roleId}:
    get:
      summary: "Get grants by role ID"
      tags:
        - "Grants"
      parameters:
        - name: "roleId"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        '200':
          description: "A list of grants for the specified role"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grant'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: "No grants found for the role"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /grants/by-permission/{permissionId}:
    get:
      summary: "Get grants by permission ID"
      tags:
        - "Grants"
      parameters:
        - name: "permissionId"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        '200':
          description: "A list of grants for the specified permission"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grant'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: "No grants found for the permission"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /permissions:
    get:
      summary: "Get all permissions"
      tags:
        - "Permissions"
      responses:
        '200':
          description: "A list of permissions."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: "Create a permission"
      tags:
        - "Permissions"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionDTO'
      responses:
        '201':
          description: "Permission created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /permissions/{permissionId}:
      get:
        summary: "Get a permission by ID"
        tags:
          - "Permissions"
        parameters:
          - name: "permissionId"
            in: "path"
            required: true
            schema:
              type: "integer"
        responses:
          '200':
            description: "A permission object"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Permission'
          '404':
            description: "Permission not found"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

      put:
        summary: "Update a permission"
        tags:
          - "Permissions"
        parameters:
          - name: "permissionId"
            in: "path"
            required: true
            schema:
              type: "integer"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDTO'
        responses:
          '200':
            description: "Permission updated"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Permission'
          '400':
            description: "Bad Request"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '404':
            description: "Permission not found"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

      delete:
        summary: "Delete a permission"
        tags:
          - "Permissions"
        parameters:
          - name: "permissionId"
            in: "path"
            required: true
            schema:
              type: "integer"
        responses:
          '204':
            description: "Permission deleted"
          '404':
            description: "Permission not found"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    RoleDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    GrantDTO:
      type: object
      properties:
        roleId:
          type: integer
          format: int64
        permissionId:
          type: integer
          format: int64
    PermissionDTO:
      type: object
      properties:
        action:
          type: string
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
    Grant:
      type: object
      properties:
        id:
          type: integer
          format: int64
        roleId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        permissionId:
          type: integer
          format: int64
        action:
          type: string
    Permission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        action:
          type: string
    ErrorResponse:
      type: object
      properties:
        message:
          type: string